(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{346:function(t,a,s){"use strict";s.r(a);var n=s(15),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"作用域与作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域与作用域链"}},[t._v("#")]),t._v(" 作用域与作用域链")]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("什么是作用域？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%BE%88%E9%87%8D%E8%A6%81"}},[t._v("为什么作用域很重要？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E7%B1%BB%E5%9E%8B"}},[t._v("作用域的类型")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%85%A8%E5%B1%80%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("全局作用域")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F%E6%88%96%E5%87%BD%E6%95%B0%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("局部作用域或函数作用域")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("块级作用域")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%B5%8C%E5%A5%97"}},[t._v("作用域嵌套")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E8%AF%8D%E6%B3%95%E4%BD%9C%E7%94%A8%E5%9F%9F"}},[t._v("词法作用域")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE"}},[t._v("作用域链")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84"}},[t._v("作用域和作用域链是如何工作的？")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E8%AF%8D%E6%B3%95%E7%8E%AF%E5%A2%83"}},[t._v("什么是词法环境？")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#Javascript%E5%BC%95%E6%93%8E%E6%98%AF%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E5%8F%98%E9%87%8F%E6%9F%A5%E6%89%BE%E7%9A%84%EF%BC%9F"}},[t._v("Javascript 引擎是如何进行变量查找的？")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%80%BB%E7%BB%93"}},[t._v("总结")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83"}},[t._v("参考")])])]),t._v(" "),a("h2",{attrs:{id:"什么是作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是作用域"}},[t._v("#")]),t._v(" 什么是作用域？")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript 的作用域说的是变量的可访问性和可见性。也就是说整个程序中哪些部分\n可以访问这个变量，或者说这个变量都在哪些地方可见。")])]),t._v(" "),a("h2",{attrs:{id:"为什么作用域很重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么作用域很重要"}},[t._v("#")]),t._v(" 为什么作用域很重要？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("「作用域最为重要的一点是安全」。变量只能在特定的区域内才能被访问，有了作用域我们就可以避免在程序其它位置意外对某个变量做出修改。")])]),t._v(" "),a("li",[a("p",[t._v("「作用域也会减轻命名的压力」。我们可以在不同的作用域下面定义相同的变量名。")])])]),t._v(" "),a("h2",{attrs:{id:"作用域的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域的类型"}},[t._v("#")]),t._v(" 作用域的类型")]),t._v(" "),a("h3",{attrs:{id:"全局作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),a("p",[t._v("任何不在函数中或者大括号中声明的变量，都是在全局作用域下，「全局作用域」下声明的变量可以在程序的任意位置访问。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 'Hello World!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"局部作用域或函数作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部作用域或函数作用域"}},[t._v("#")]),t._v(" 局部作用域或函数作用域")]),t._v(" "),a("p",[t._v("在函数内部声明的变量是在局部作用域内。只能从该函数内部访问它们，这意味着它们不能从外部代码访问。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 'Hello World!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错 Uncaught ReferenceError: greeting is not defined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),a("p",[t._v("ES6 引入了 "),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 变量，与 "),a("code",[t._v("var")]),t._v(" 变量不同，它们的作用域可以是最接近的花括号对。这意味着，不能从那对花括号外面访问它们。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" lang "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints 'Hello World!'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 'English'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错 Uncaught ReferenceError: greeting is not defined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("从上面代码可以看出，大括号中使用 "),a("code",[t._v("var")]),t._v(" 声明的变量可以在块外部使用，即 "),a("code",[t._v("var")]),t._v(" 变量不在块级作用域内。")]),t._v(" "),a("h2",{attrs:{id:"作用域嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域嵌套"}},[t._v("#")]),t._v(" 作用域嵌套")]),t._v(" "),a("p",[t._v("就像 JavaScript 中的函数可以在一个函数内部声明另一个函数一样，一个作用域可以嵌套在另一个作用域内。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lang "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在这里，我们有3个作用域彼此嵌套。首先，块作用域（由于 "),a("code",[t._v("let")]),t._v(" 变量而创建）嵌套在局部作用域或函数作用域内，而嵌套作用域又嵌套在全局作用域内。")]),t._v(" "),a("h2",{attrs:{id:"词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),a("p",[t._v("词法作用域（也叫静态作用域）从字面意义上看是说作用域在词法化阶段（通常是编译阶段）确定而非执行阶段确定的。看例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("54")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints 42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面代码，无论从何处调用 "),a("code",[t._v("printNumber()")]),t._v(" 函数，"),a("code",[t._v("console.log(number)")]),t._v(" 都将始终打印 "),a("code",[t._v("42")]),t._v("。这与具有动态作用域的语言不同，在「动态作用域」中，"),a("code",[t._v("console.log(number)")]),t._v(" 将根据调用函数 "),a("code",[t._v("printNumber()")]),t._v(" 的位置显示不同的值。")]),t._v(" "),a("p",[t._v("如果上面的代码是用支持「动态作用域」的语言编写的，那么 "),a("code",[t._v("console.log(number)")]),t._v(" 会打印 "),a("code",[t._v("54")]),t._v("。")]),t._v(" "),a("p",[t._v("使用「词法作用域」，我们可以仅通过查看源代码来确定变量的范围。而在动态范围界定的情况下，在执行代码之前无法确定范围。而在「动态作用域」界定的情况下，在执行代码之前无法确定范围。")]),t._v(" "),a("p",[t._v("像 C，C ++，Java，Javascript 等大多数编程语言都支持「静态作用域」。Perl 既支持「动态作用域」又支持静态作用域。")]),t._v(" "),a("h2",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),a("p",[t._v("⭐️⭐️⭐️ 当在JavaScript中使用变量时，JavaScript 引擎将尝试在「当前作用域」中查找变量的值。如果找不到变量，它将查找「外部作用域」并将继续这样做，直到找到变量或到达「全局作用域」为止。")]),t._v(" "),a("p",[t._v("如果仍然找不到该变量，它将在全局作用域内隐式声明该变量（如果不是在严格模式下）或返回错误。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" baz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 'baz'")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 'foo'")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当执行函数 "),a("code",[t._v("bar()")]),t._v(" 时，JavaScript 引擎将查找 "),a("code",[t._v("baz")]),t._v(" 变量并在当前作用域中找到它。接下来，它会在当前作用域中查找 "),a("code",[t._v("foo")]),t._v(" 变量，但无法在该作用域中找到它，因此它会在外部作用域中查找该变量并在其中找到它（即全局作用域）。")]),t._v(" "),a("p",[t._v("之后，我们将 "),a("code",[t._v("42")]),t._v(" 分配给 "),a("code",[t._v("number")]),t._v(" 变量，因此 JavaScript 引擎会在当前作用域内以及之后在外部作用域内查找 "),a("code",[t._v("number")]),t._v(" 变量。")]),t._v(" "),a("p",[t._v("如果脚本不是在严格模式下，则引擎将创建一个名为 "),a("code",[t._v("number")]),t._v(" 的新变量，并为其分配 "),a("code",[t._v("42")]),t._v(" 或返回错误（如果是在严格模式下）。")]),t._v(" "),a("p",[t._v("因此，当使用变量时，引擎将遍历「作用域链」，直到找到该变量为止。")]),t._v(" "),a("h2",{attrs:{id:"作用域和作用域链是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域和作用域链是如何工作的"}},[t._v("#")]),t._v(" 作用域和作用域链是如何工作的？")]),t._v(" "),a("p",[t._v("到目前为止，我们已经讨论了作用域是什么以及作用域的类型。现在，让我们了解 JavaScript 引擎如何确定变量的范围并在后台执行变量查找。")]),t._v(" "),a("p",[t._v("为了了解 JavaScript 引擎如何执行变量查找，我们必须了解 JavaScript 中的「词法环境」的概念。")]),t._v(" "),a("h3",{attrs:{id:"什么是词法环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是词法环境"}},[t._v("#")]),t._v(" 什么是词法环境？")]),t._v(" "),a("p",[t._v("⭐️⭐️⭐️ 「词法环境」是保存标识符变量映射的结构。（此处，标识符是指变量/函数的名称，而变量是对实际对象（包括函数对象和数组对象）或原始值的引用）。")]),t._v(" "),a("p",[t._v("简而言之，词法环境是存储变量和对象引用的地方。")]),t._v(" "),a("p",[t._v("⭐️ "),a("strong",[t._v("注意")]),t._v("—不要将词法作用域与词法环境混淆，词法作用域是在编译时确定的作用域，而词法环境是在程序执行期间存储变量的地方。")]),t._v(" "),a("p",[t._v("从概念上讲，词法环境如下所示：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("lexicalEnvironment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" to the object"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("仅当执行该「词法作用域」中的代码时，引擎才为每个词法作用域创建一个新的「词法环境」。词法环境还引用了其外部词法环境（即外部作用域）。例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("lexicalEnvironment = {\n  a: 25,\n  obj: <ref. to the object>\n  outer: <outer lexical environemt>\n}\n")])])]),a("h2",{attrs:{id:"javascript引擎是如何进行变量查找的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript引擎是如何进行变量查找的"}},[t._v("#")]),t._v(" Javascript引擎是如何进行变量查找的？")]),t._v(" "),a("p",[t._v("现在我们知道了「作用域」，「作用域链」和「词法环境」，现在让我们了解 JavaScript 引擎如何使用词法环境来确定作用域和作用域链。")]),t._v(" "),a("p",[t._v("让我们看一下下面的代码片段，以了解以上概念。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Peter'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("加载上述脚本后，将创建一个「全局词法环境」，其中包含在「全局作用域」内定义的变量和函数。例如：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("globalLexicalEnvironment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("greeting")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("greet")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" to greet "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这里，「外部词法环境」被设置为 "),a("code",[t._v("null")]),t._v("，因为在「全局作用域」之后没有「外部作用域」。")]),t._v(" "),a("p",[t._v("之后，会遇到对 "),a("code",[t._v("greet()")]),t._v(" 函数的调用。因此，为 "),a("code",[t._v("greet()")]),t._v(" 函数创建了一个新的词法环境。例如：")]),t._v(" "),a("p",[t._v("此处，「外部词法环境」被设置为 "),a("code",[t._v("globalLexicalEnvironment")]),t._v("，因为其外部作用域是「全局作用域」。")]),t._v(" "),a("p",[t._v("之后，JavaScript 引擎执行 "),a("code",[t._v("console.log(")]),t._v("$ {greeting} $ {name}"),a("code",[t._v(")")]),t._v(" 语句。")]),t._v(" "),a("p",[t._v("JavaScript 引擎尝试在函数的「词法环境」中查找 "),a("code",[t._v("greeting")]),t._v(" 和 "),a("code",[t._v("name")]),t._v(" 变量。它可以在当前词法环境中找到 "),a("code",[t._v("name")]),t._v(" 变量，但无法在当前词法环境中找到 "),a("code",[t._v("greeting")]),t._v(" 变量。")]),t._v(" "),a("p",[t._v("因此，它在外部词法环境（由 "),a("code",[t._v("outer")]),t._v(" 属性定义，即「全局词法环境」）中查找并找到 "),a("code",[t._v("greeting")]),t._v(" 变量。")]),t._v(" "),a("p",[t._v("接下来，JavaScript 引擎在该块内的代码处执行。因此，它为该块创建了一个新的词法环境。例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("blockLexicalEnvironment = {\n  greeting: 'Hello World',\n  outer: <globalLexicalEnvironment>\n}\n")])])]),a("p",[t._v("接下来，执行 "),a("code",[t._v("console.log(greeting)")]),t._v(" 语句，JavaScript 引擎在当前词法环境中找到该变量并使用该变量。因此，它不会在变量的外部词法环境（全局词法环境）内部查找。")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("—仅为 "),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 声明而不是 "),a("code",[t._v("var")]),t._v(" 声明创建一个新的词法环境。 "),a("code",[t._v("var")]),t._v(" 声明被添加到当前词法环境（全局或函数词法环境）中。")]),t._v(" "),a("p",[t._v("⭐️⭐️⭐️ 因此，当在程序中使用变量时，JavaScript 引擎将尝试在当前词法环境中查找该变量，如果无法在该词法环境中找到该变量，它将在外部词法环境中查找该变量。这就是 JavaScript 引擎执行变量查找的方式")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("简而言之，作用域是一个可见和可访问变量的区域。就像函数一样，JavaScript 中的作用域可以嵌套，JavaScript 引擎遍历作用域链以查找程序中使用的变量。")]),t._v(" "),a("p",[t._v("JavaScript 使用词法作用域，这意味着变量的作用域是在编译时确定的。 JavaScript 引擎使用词法环境在程序执行期间存储变量。")]),t._v(" "),a("p",[t._v("作用域和作用域链是每个 JavaScript 开发人员都应该理解的 JavaScript 基本概念。对这些概念有充分的了解将帮助您成为一个更有效，更好的 JavaScript 开发人员。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.bitsrc.io/understanding-scope-and-scope-chain-in-javascript-f6637978cf53",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding Scope and Scope Chain in JavaScript"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://kmanong.top/kmn/qxw/form/article?id=69713&cate=51",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解Javascript的作用域和作用域链"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);