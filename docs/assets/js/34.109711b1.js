(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{347:function(t,s,a){"use strict";a.r(s);var n=a(15),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"原型原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型原型链"}},[t._v("#")]),t._v(" 原型原型链")]),t._v(" "),s("h3",{attrs:{id:"原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),s("blockquote",[s("p",[t._v("概念：在构造函数创建的时候，系统默认的帮构造函数创建并关联一个对象 这个对象就是原型")])]),t._v(" "),s("p",[t._v("作用：在原型中的所有属性和方法，都可以被和其关联的构造函数创建出来的所有的对象共享")]),t._v(" "),s("p",[t._v("JavaScript 的每个对象都继承自另一个对象，后者称为“原型”（prototype）对象。只有 "),s("code",[t._v("null")]),t._v(" 除外，它没有自己的原型对象。")]),t._v(" "),s("p",[t._v("使用原型的好处是：原型对象上的所有属性和方法，都能被对应的构造函数创建的实例对象共享（这就是 JavaScript 继承机制的基本设计），也就是说，不必在构造函数中定义对象实例的(公共)信息，而是可以将这些信息直接添加到原型对象中。")]),t._v(" "),s("p",[t._v("每一个构造函数都有一个 "),s("code",[t._v("prototype")]),t._v("（原型）属性，这个属性就是使用构造函数创建出来的实例对象的原型对象。")]),t._v(" "),s("p",[t._v("每一个实例对象都有一个 "),s("code",[t._v("__proto__")]),t._v(" (隐式原型) 属性，这个属性指向创建它出来的构造函数的原型对象("),s("code",[t._v("prototype")]),t._v(")。")]),t._v(" "),s("p",[t._v("原型对象也有一个自己的原型对象("),s("code",[t._v("__proto__")]),t._v(")，层层向上直到 "),s("code",[t._v("Object.prototype")]),t._v(" 对象的原型对象("),s("code",[t._v("__proto__")]),t._v(")为 "),s("code",[t._v("null")]),t._v("。"),s("code",[t._v("null")]),t._v(" 没有原型，并作为这个原型链中的最后一个环节。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1%E3%80%81%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.jpeg",alt:"构造函数、实例对象、原型对象之间的关系"}})]),t._v(" "),s("h3",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("h4",{attrs:{id:"什么是原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是原型链"}},[t._v("#")]),t._v(" 什么是原型链？")]),t._v(" "),s("blockquote",[s("p",[t._v("对象的属性和方法，可能定义在自身，也可能是定义在它的原型上，由于原型本身也是对象，又有自己的原型，所以形成了一条原型链。")])]),t._v(" "),s("p",[t._v("如果一层层地上溯，所有对象的原型最终都可以上溯到 "),s("code",[t._v("Object.prototype")]),t._v("，即 "),s("code",[t._v("Object")]),t._v(" 构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性指向的那个对象。而 "),s("code",[t._v("Object.prototype")]),t._v(" 对象的原型就是没有任何属性和方法的 "),s("code",[t._v("null")]),t._v(" 对象，而 "),s("code",[t._v("null")]),t._v(" 对象没有自己的原型。")]),t._v(" "),s("h4",{attrs:{id:"原型链的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链的作用"}},[t._v("#")]),t._v(" 原型链的作用？")]),t._v(" "),s("p",[t._v("在读取对象的某个属性时，JavaScript 引擎将首先检查对象本身是否存在该属性。 如果不存在，就会到它的原型上去找。如果找不到，就到原型的原型上进行查找；如果直到最顶层的 "),s("code",[t._v("Object.prototype")]),t._v(" 还是找不到，则返回 "),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("p",[t._v("如果对象自身和它的原型，都定义了一个同名属性，那么优先读取对象自身的属性，这叫做“覆盖”（overriding）。")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v(": 需要注意的是，一级级向上，在原型链寻找某个属性，对性能是有影响的。所寻找的属性在越上层的原型对象，对性能的影响越大。如果寻找某个不存在的属性，将会遍历整个原型链。")]),t._v(" "),s("h3",{attrs:{id:"对象之间的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象之间的关系"}},[t._v("#")]),t._v(" 对象之间的关系")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("Object.__proto__ === Function.prototype")]),t._v("。"),s("code",[t._v("Object")]),t._v(" 本质上是一个built-in 的全局构造函数，也是 "),s("code",[t._v("Function")]),t._v(" 构造函数的实例。所以 "),s("code",[t._v("Object.__proto__ === Function.prototype")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("Number")]),t._v("，"),s("code",[t._v("Date")]),t._v("，"),s("code",[t._v("Array")]),t._v(" 等 built-in 构造函数都和 "),s("code",[t._v("Object")]),t._v(" 构造函数一样。")]),t._v(" "),s("li",[s("code",[t._v("Function.prototype")]),t._v(" 本质也是对象，所以其 "),s("code",[t._v("__proto__")]),t._v(" 指向 "),s("code",[t._v("Object.prototype")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("Function")]),t._v(" 本质也是构造函数，但它是自身的实例，因此其 "),s("code",[t._v("__proto__")]),t._v(" 指向 "),s("code",[t._v("Function.prototype")]),t._v("。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/%E5%8E%9F%E5%9E%8B%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE/%E5%8E%9F%E5%9E%8B%E9%93%BE.png",alt:"原型链"}})]),t._v(" "),s("h3",{attrs:{id:"class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" Class")]),t._v(" "),s("blockquote",[s("p",[t._v("ES6 的class 可以看作是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的class 写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("特点")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("class")]),t._v(" 中的 "),s("code",[t._v("constructor")]),t._v(" 函数相当于ES5中的构造函数。")]),t._v(" "),s("li",[t._v("类的内部定义的所有方法都是不可枚举的。")]),t._v(" "),s("li",[t._v("类和模块内部默认采用严格模式。")]),t._v(" "),s("li",[t._v("子类继承父类以后，必须在 "),s("code",[t._v("constructor")]),t._v(" 中调用时 "),s("code",[t._v("super")]),t._v(" 方法，否则不能新建实例，因为子类没有属于自己的 "),s("code",[t._v("this")]),t._v(" 对象，而是继承了父类的 "),s("code",[t._v("this")]),t._v(" 对象对其进行加工。")])]),t._v(" "),s("p",[t._v("类和原型的关系：")]),t._v(" "),s("blockquote",[s("p",[t._v("每一个对象都有 "),s("code",[t._v("__proto__")]),t._v(" 属性，指向对应的构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性。"),s("code",[t._v("class")]),t._v(" 作为构造函数的语法糖，同时有 "),s("code",[t._v("prototype")]),t._v(" 属性和 "),s("code",[t._v("__proto__")]),t._v(" 属性，因此同时存在两条继承链。")])]),t._v(" "),s("ol",[s("li",[t._v("子类的 "),s("code",[t._v("__proto__")]),t._v(" 属性，表示构造函数的继承，总是指向父类。")]),t._v(" "),s("li",[t._v("子类 "),s("code",[t._v("prototype")]),t._v(" 属性的 "),s("code",[t._v("__proto__")]),t._v(" 属性，表示实例方法的继承，总是指向父类的 "),s("code",[t._v("prototype")]),t._v(" 属性。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("作为一个对象，子类（B）的原型（"),s("code",[t._v("__proto__")]),t._v("属性）是父类（A）；")]),t._v(" "),s("p",[t._v("作为一个构造函数，子类（B）的原型对象（ "),s("code",[t._v("prototype")]),t._v(" 属性）是父类的原型对象（ "),s("code",[t._v("prototype")]),t._v(" 属性）的实例。")]),t._v(" "),s("h4",{attrs:{id:"实例的-proto-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例的-proto-属性"}},[t._v("#")]),t._v(" "),s("strong",[t._v("实例的 "),s("code",[t._v("__proto__")]),t._v(" 属性")])]),t._v(" "),s("blockquote",[s("p",[t._v("子类实例的 "),s("code",[t._v("__proto__")]),t._v(" 属性的 "),s("code",[t._v("__proto__")]),t._v(" 属性，指向父类实例的"),s("code",[t._v("__proto__")]),t._v(" 属性。也就是说，子类的原型的原型，是父类的原型。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ColorPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\np2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\np2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" p1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h4",{attrs:{id:"类中-this-指向问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类中-this-指向问题"}},[t._v("#")]),t._v(" "),s("strong",[t._v("类中 "),s("code",[t._v("this")]),t._v(" 指向问题")])]),t._v(" "),s("blockquote",[s("p",[t._v("类的方法内部含有 "),s("code",[t._v("this")]),t._v("，默认指向类的实例。但是当类中的实例方法提取出来使用的时候，"),s("code",[t._v("this")]),t._v(" 指向运行时所在环境。")])]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("printName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("printName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'there'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"es5与es6-实现继承的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es5与es6-实现继承的区别"}},[t._v("#")]),t._v(" "),s("strong",[t._v("ES5与ES6 实现继承的区别")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在ES5中，继承实质上是子类先创建属于自己的 "),s("code",[t._v("this")]),t._v("，然后再将父类的方法添加到 "),s("code",[t._v("this")]),t._v("（也就是使用 "),s("code",[t._v("Parent.apply(this)")]),t._v("的方式")])]),t._v(" "),s("li",[s("p",[t._v("而在ES6中，则是先创建父类的实例对象 "),s("code",[t._v("this")]),t._v("，然后再用子类的构造函数修改 "),s("code",[t._v("this")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/dafdf862d4614009a9eab014a157dd83",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 原型，原型链 ? 有什么特点？— 牛客网"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/39549472",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 原型和原型链 — 冷月孤照"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000021232132",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript原型&原型链 — 巴斯光年"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000013022549",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解Javascript原型关系"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1408666",target:"_blank",rel:"noopener noreferrer"}},[t._v("详解js原型，构造函数以及class之间的原型关系"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);